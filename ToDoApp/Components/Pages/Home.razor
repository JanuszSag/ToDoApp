@page "/"
@using ToDoApp.Models
@using ToDoApp.Services
@inject IDialogService DialogService
@inject ToDoService ToDoService


<MudTable Items="@ToDoItems" Hover="true">
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>State</MudTh>
        <MudTh>Action</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="isCompleted">
            <MudCheckBox @bind-Value="@context.IsCompleted" CheckedChanged=@ToDoService.HandleCheckbox(@context.IsCompleted,@context.Id)></MudCheckBox>
        </MudTd>
        <MudTd DataLabel="Remove"><MudButton Variant="Variant.Filled" Color="Color.Secondary"
                                             OnClick="@(async () => await RemoveItemAsync(context.Id))">Remove</MudButton></MudTd>
    </RowTemplate>
</MudTable>

<MudButton OnClick="@(() => OpenDialogAsync())" Variant="Variant.Filled" Color="Color.Primary">Add new item</MudButton>

@code
{
    public bool test {get;set;} = true;
            
    public List<ToDoTask> ToDoItems = [];
    
    protected override async Task OnInitializedAsync()
    {
        ToDoItems = await ToDoService.getAllToDoItemsListAsync();
        await base.OnInitializedAsync();
    }
    
    private async Task OpenDialogAsync()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };

        var reference = await DialogService.ShowAsync<AddToDoDialog>("Simple Dialog", new DialogOptions()
        {
            CloseButton = true, 
            MaxWidth = MaxWidth.Medium, 
            FullWidth = true
        });

        var result = await reference.Result;
        if(result.Canceled || result is null) 
            return;
        
        if(result.Data is true)
        {
            ToDoItems = await ToDoService.getAllToDoItemsListAsync(); 
            StateHasChanged();
        }
    }

    private async Task RemoveItemAsync(int id)
    {
        await ToDoService.RemoveToDoItemAsync(id);
        ToDoItems = await ToDoService.getAllToDoItemsListAsync();
        StateHasChanged();
    }


}